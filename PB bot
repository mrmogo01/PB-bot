import vk_api
import time
import datetime
import random

vk_session = vk_api.VkApi(token='vk1.a.A1vau7tzc3xegqL5fU5QpR8sfkCI2lL8eri9wYrnhCNrxXbpQz1WRhMsSQTwVw-7MEZKqC6K7P46qDXxHl3h-ycndU5q1nXj16chlqFLlInvhmgKLHeUd7wCvDT6h9wziDWCXLfE5yybYMD63LmSXAQpx5b8wPBlpozDcdrCf6jdyjsvTfUH5hGy-DWAc3M2EFC6hM_zGpsdF_fKw2HSgA')
vk = vk_session.get_api()

jokes = [
    #"Плюсы и минусы быть ученым в средневековье. Плюсы: Ты ученый. Минусы: На костре печеный",
    #"— Почему в Румынии вымерли все лебеди?\n— Цыгане быстрее доплывали до хлеба.",
    #"Мужик с удочкой сидит на берегу реки. Подходит женщина, раздевается догола, а в интимном месте пирсинг, и идет купаться.\nРыбак:\n— Ты трусы-то надень, тут щука на блесну здорово берет."
    #"Приходит маленькая, испуганная девочка домой, и говорит маме:\n— Мама, меня хотели убить!\n— С чего ты взяла?!\n— Я сидела, играла в песочнице, потом пришли два мужика, достали стаканы и бутылку, и говорят: ""Ебанем по маленькой!""",
    #"Сидит мужик рыбачит, вдруг слышит вдалеке: «пошёл нахуй». Смотрит - никого нету. Через пару минут снова слышит: «пошёл нахуй». Смотрит - никого. Вдруг видит - мужик на лодке без весел плывет.\n— Мужик, а вёсла-то где?\n— Пошёл нахуй",
    #"Молодой человек 14-ти неполных лет приходит к врачу:\n— Доктор, мне кажется, что у меня депрессия и биполярное расстройство.\n— А мне кажется, что я сейчас тебе в ебало настучу.\nМолодому человеку резко похорошело. Это был очень мудрый доктор.",
    #"Мужик спрашивает у араба:\n— Слушай, вот никак не могу понять, зачем вашим женщинам эта тряпка на голове - паранджа или как её?... Лица не видно, дышать невозможно, есть сложно... Ну нафига?\nАраб молча лезет в карман и нащупывает хуй.\n- Да блядь, конфеты забыл!!",
    #"Одна девушка умерла юной, так и не познав мужа. Афродита сжалилась над ней и превратила в созвездие.\nДевушка стала раком.",
    #"— Приезжай, родителей нет дома.\n— Хорошо, где ты?\n— В детдоме номер 7.",
    #"Сегодня я удивил почтальона, открыв дверь совершенно голый. Не знаю, что удивило его больше, моя нагота или то, что я знал где он живет.",
    #"Девушка решила покончить жизнью, стоит у оврага и подходит бомж, говорит:\n- Слушай, давай сексом займёмся, ты все равно покончить собой хочешь!\nОна:\n- нет, отстань от меня!\nБомж:\n- ладно, внизу подожду!",
    #"Я в тюрьме всего 5 минут, а меня изнасиловали уже 3 раза.\nБольше не буду играть с папой в монополию",
    #"Одного парня заколдовала колдунья: он мог говорить только одно слово в год. Он выучил язык жестов, сделал предложение возлюбленной и жили они долго и счастливо, и слава тебе, Господи",
    #"Почему не существует обзоров на наркотики?\nОтсутствуют независимые эксперты",
    #"Одного парня заколдовала злая колдунья: он мог говорить только одно слово в год. Спустя два года он вернулся к ней со словами:\n— Пошла нахуй.\nПарень тоже был злым.",
    #"Как взломать банкомат?\nОтвет: очень просто! Берете ноутбук и кувалду. Подходите к банкомату,\nразбиваете его кувалдой вдребезги, забираете деньги и уходите.\n""Зачем тогда брать ноутбук?""\n - спросите Вы.\nОтвечаю: какой же вы хакер без ноутбука",
    #"- Паш, слушай, у тебя ведь фамилия Черный?\n- Ну да.\n- Назови сына Плащом! Прикинь, в школе:\n""Еблан с тупым именем, к доске!""",
    #"Хочется выйти ночью на улицу, провести рукой по пшенице, набрать в грудь воздуха да как заорать во всю глотку:\n— Откуда в центре города пшеница, блять?!",
    #"— Ты думаешь ты можешь вот так вот просто вырывать цитаты из контекста?\n— Да (Евангелие от Матфея, 6 глава, 27 стих, 1 слово)\n– Пизда! (Пресс-конференция Филиппа Киркорова в Ростове-на-Дону, 20 мая 2004 г.)",
    #"Ведёт профессор лекцию по физике. Зашла речь про большой взрыв. И тут из аудитории: ""Ну нихуя ты вспомнил.",
    #"- А вот ты знаешь, что тюльпаны на ночь закрываются, пока нет солнца, а утром открываются снова?\n- Как пивной ларек?\n- Как пивной ларек.",
    #"Мало кто знает, что если рыба-меч застрянет в камне\nТо вытащить ее оттуда сможет только рыба-король-артур",
    #"В пекинском метро. Девушка и парень ждут поезда. Парень высоким тоном к девушке:\n— Чу мин сянь дуф хе!\nДевушка задумчиво отвечает:\n— Ян фан си.\nПарень, злясь, громко:\n— Дау шан фан, да фан ню, ян шан го зин!\nДевушка отвечает:\n— Жи куан гуа хе, шу ен гу шинь ху!\n\nПрямо так внимательно читаешь, как будто понимаешь по-китайски?! Иди работать!",
    #"Ты серьезно свой член называешь пчелой?\n-Да\n-Жаль",
    #"Беседуют два друга-киллера:\n— Слушай, Колян, а ты мог бы меня за бабки убить?\n— Да ты че, Андрюха! Ты ж братан, я тебя бесплатно ёбну",
    #"говорит помощник машинисту:\n-смотри, там парень на рельсах!\n-где?\n-а, да всё, забей, проехали",
    #"Разговор третьеклассников:\n- Попробуй быстро-быстро говорить слово ""поезда""\n- Поезда, поезда, поезда, поезда...\n- Бля, в виде текста не смешно получилось",
    #"Кто знает, какие успокоительные лекарства принимает медведь в мультике про Машу? Мне тоже такие надо.",
    #"Минут пять вникал в газетный заголовок: «Когда минет беда».",
    #"Если идешь  охотиться на Годзиллу — то шансы 50 на 50: либо он тебя…либо ОНА тебя — зависит от пола Годзиллы…",
    #"Я понял, что мой папа не совсем космонавт, когда он привез мне с Луны шахматы из хлебного мякиша.",
    #"Я не ленивый, просто меня хранит великий древнеегипетский бог покоя и умиротворения Данунах.",
    #"Хорошего бухгалтера найти трудно, поэтому Вера Павловна уже двадцать лет числится в федеральном розыске.",
    #"—Давай на камень, ножницы, бумага?\n\n— Я так понимаю, кредит Вы возвращать не собираетесь?",
    "На семьдесят девятой минуте размышлений о том, с чего бы мне начать уборку, принял решение перекусить."
]

# Список дежурных коворкинга
duty_schedule = {
    0: { #Понедельник
        #"10:00-11:00": ["@aaaaalllooooo(Алена)", "@mrmogo(Андрей)"],
        #"11:00-12:00": ["@mrmogo(Андрей)", "@valeronabaddon(Дима М)"],
        #"12:00-13:00": ["@valeronabaddon(Дима М)", "@elmsberry(Эмма)"],
        #"13:00-14:00": ["@elmsberry(Эмма) (до 13:30)", "@emma_shifter(Настя)", "@lads_mart(Лада)"],
        #"14:00-15:00": ["@emma_shifter(Настя)", "@lads_mart(Лада)"],
        #"15:00-16:00": ["@darianokhrinaa(Даша Н)", "@thesleepinglion(Лева)"]
    },
    1: { # Вторник
        "10:00-11:00": ["@lezidey(Кирилл)", "@graziazz(Даша Ф)"],
        "11:00-12:00": ["@graziazz(Даша Ф)", "@limonadgs(Дима Ю)"],
        "12:00-13:00": ["@limonadgs(Дима Ю)", "@night.cross(Леша)"],
        "13:00-14:00": ["@night.cross(Леша)", "@xx_zmary(Маша)"],
        "14:00-15:00": ["@po_katyusha(Катя)", "@xx_zmary(Маша)"],
        "15:00-16:00": ["@darianokhrinaa(Даша Н)", "@thesleepinglion(Лева)"]
    },
    2: {  # Среда
        #"10:00-11:00": ["@po_katyusha(Катя)", "@i_am_spacey(Максим К)"],
        #"11:00-12:00": ["@i_am_spacey(Максим К)", "@febekey(Вера)"],
        #"12:00-13:00": ["@febekey(Вера)", "@kovtpolly(Поля К)"],
        #"13:00-14:00": ["@kovtpolly(Поля К)", "@zhivtsov2000(Максим Ж)"],
        #"14:00-15:00": ["@zhivtsov2000(Максим Ж)", "@dasha_korelina(Даша К)"],
        #"15:00-16:00": ["@dasha_korelina(Даша К)", "@avepsam(Рома)"]
    },
    3: {  # Четверг
        "10:00-11:00": ["@avepsam(Рома)", "@darybut(Даша Б)"],
        "11:00-12:00": ["@darybut(Даша Б)", "@zhivtsov2000(Максим Ж)"],
        "12:00-13:00": ["@lezidey(Кирилл)", "@mrmogo(Андрей)"],
        "13:00-14:00": ["@aaaaalllooooo(Алена)", "@lads_mart(Лада)"],
        "14:00-15:00": ["@febekey(Вера)", "@avepsam(Рома)"],
        "15:00-16:00": ["@apelsinn14(Миша)", "@polinariaa_d(Поля Д)"]
    },
    4: {  # Пятница
        #"10:00-11:00": ["@apelsinn14(Миша)", "@baldejniy_name(Макс П)"],
        #"11:00-12:00": ["@baldejniy_name(Макс П)", "@ksushasolnyshko(Ксю)"],
        #"12:00-13:00": ["@ksushasolnyshko(Ксю)", "@darianokhrinaa(Даша Н)"],
        #"13:00-14:00": ["@aaaaalllooooo(Алена)", "@roggi7(Игорь)"],
        #"14:00-15:00": ["@roggi7(Игорь)", "@polinariaa_d(Поля Д)"],
        #"15:00-16:00": ["@polinariaa_d(Поля Д)", "@elmsberry(Эмма)"]
    }
}

# График работы коворкинга
coworking_schedule = {
    "15-04-2024": {"status": "Закрыт весь день"}, # Понедельник
    "16-04-2024": {"status": "Открыт весь день"}, # Вторник
    "17-04-2024": {"status": "Закрыт весь день"}, # Среда
    "18-04-2024": {"status": "Открыт весь день"}, # Четверг
    "19-04-2024": {"status": "Закрыт весь день"}  # Пятница

}

# График уборки
cleaning_schedule = {
    "12-02-2024": ["@mrmogo(Андрей)", "@zhivtsov2000(Максим Ж)"],
    "19-02-2024": ["@roggi7(Игорь)", "@apelsinn14(Миша)"],
    "26-02-2024": ["@avepsam(Рома)", "@baldejniy_name(Макс П)"],
    "4-03-2024": ["@emma_shifter(Настя)", "@ksushasolnyshko(Ксю)"],
    "11-03-2024": ["@elmsberry(Эмма)", "@limonadgs(Дима Ю)"],
    "18-03-2024": ["@xx_zmary(Маша)", "@darianokhrinaa(Даша Н)"],
    "25-03-2024": ["@po_katyusha(Катя)", "@aaaaalllooooo(Алена)"],
    "1-04-2024": ["@lezidey(Кирилл)", "@graziazz(Даша Ф)"],
    "8-04-2024": ["@kovtpolly(Поля К)", "@darybut(Даша Б)"],
    "15-04-2024": ["@polinariaa_d(Поля Д)", "@i_am_spacey(Максим К)"]
}



# Словарь для русских названий дней недели
russian_weekdays = {
    0: "Понедельник",
    1: "Вторник",
    2: "Среда",
    3: "Четверг",
    4: "Пятница",
    5: "Суббота",
    6: "Воскресенье"
}

# Определяем день недели для завтрашней даты
tomorrow = datetime.datetime.now() + datetime.timedelta(days=1)
# Определяем время для отправки сообщения



# Функция для определения ответственных за уборку на заданную дату
def get_cleaning_responsibles(date):
    for key_date in cleaning_schedule:
        start_date = datetime.datetime.strptime(key_date, "%d-%m-%Y")
        end_date = start_date + datetime.timedelta(days=6)  # Продолжительность уборки - 7 дней
        if start_date <= date <= end_date:
            return cleaning_schedule[key_date]
    return "Не указано"  # Если на заданную дату нет информации о уборке


while True:
    now = datetime.datetime.now()

    # Определяем день недели для завтрашней даты
    tomorrow = datetime.datetime.now() + datetime.timedelta(days=1)
    tomorrow_day = tomorrow.weekday()

    # Проверяем, достигнуто ли нужное время для отправки сообщения
    if datetime.time(20, 59) < now.time() and now.time() < datetime.time(21, 00):
        # Проверяем, что сегодня не суббота или воскресенье
        if tomorrow_day not in [5, 6]:
            message = f"Дата: {tomorrow.strftime('%d-%m-%Y')}\n"
            message += f"День недели: {russian_weekdays[tomorrow_day]}\n"
            if tomorrow.strftime('%d-%m-%Y') in coworking_schedule:
                coworking_info = coworking_schedule[tomorrow.strftime('%d-%m-%Y')]
                if 'status' in coworking_info:
                    message += f"Состояние коворкинга: {coworking_info['status']}\n\n"
                else:
                    message += "Состояние коворкинга: Не указано\n"
                if 'time' in coworking_info:
                    message += f"Время коворкинга: {coworking_info['time']}\n"
            else:
                message += "Состояние коворкинга: Не указано\n"

            # Если коворкинг закрыт весь день, выводим только информацию о людях по уборке
            if tomorrow.strftime('%d-%m-%Y') in coworking_schedule and \
                    coworking_schedule[tomorrow.strftime('%d-%m-%Y')]["status"] == "Закрыт весь день":
                message += f"\n🧹 Ответственные за уборку на эту неделю: {', '.join(get_cleaning_responsibles(tomorrow))}\n"
                random_joke = random.choice(jokes)
                message += f"\n\n😄 Вот вам анекдот дня, для хорошего настроения:\n{random_joke}"
            else:
                if tomorrow_day in duty_schedule:
                    duty_info = duty_schedule[tomorrow_day]
                    message += "Дежурные на завтра:\n"
                    for time_slot, people in duty_info.items():
                        message += f"{time_slot}: {', '.join(people)}\n"
                else:
                    message += "Дежурные на завтра: Не указано\n"

                # Получаем ответственных за уборку на заданную дату и добавляем их в сообщение
                cleaning_responsibles = get_cleaning_responsibles(tomorrow)
                message += f"\n🧹 Ответственные за уборку на эту неделю: {', '.join(cleaning_responsibles)}\n"
                random_joke = random.choice(jokes)
                message += f"\n\n😄 Вот вам анекдот дня, для хорошего настроения:\n{random_joke}"

            # Отправляем сообщение в каждый чат
            for chat_id in range(1, 3):  # Предположим, что у вас есть 100 чатов с номерами от 1 до 100
                try:
                    vk.messages.send(chat_id=chat_id, message=message, random_id=0)
                except vk_api.exceptions.ApiError as e:
                    print(f"Ошибка при отправке сообщения в чат {chat_id}: {e}")
                time.sleep(1)  # Ожидание между отправкой сообщений, чтобы избежать блокировки

        # После отправки сообщений ждем до следующего дня для повтора цикла
        time.sleep(60)  # Ожидание, чтобы избежать множественной отправки одного сообщения
    else:
        # Если время еще не достигнуто, ждем некоторое время и проверяем снова
        time.sleep(60)
